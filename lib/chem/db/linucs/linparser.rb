#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.4
# from racc grammer file "linucs.ry".
#

require 'racc/parser'


class LinucsParser < Racc::Parser

module_eval <<'..end linucs.ry modeval..idcf977ebdbe', 'linucs.ry', 11

def next_token
  @q.shift
end

def parse( line )
  @q = []
  
  line.strip!
  until line.empty? do
    case line
    when /\A\[/
      @q.push [:Ll, :Ll]
    when /A\]/
      @q.push [:Lr, :Lr]
    when /\A\[([^\]]+)\]/
      @q.push [:ATOM_SYMBOL, $&] # [m[1], m[2], m[3], m[4], m[5], m[6]]]
    when /\A(Cl|C|F|H|N|O|Au|U)/
      @q.push [:SYMBOL, $&.intern ]
    when /\A[a-zA-Z_]/
      @q.push [:SYMBOL, $&.intern ]
    when /\A\d+/
      @q.push [:NUMBER, $&.to_i ]
    when /\\/
      @q.push [:BSLASH, :BSLASH]
    when /\A./
      @q.push [$&, $&]
    else
      raise RuntimeError, 'must not happen'
    end
    line = $'
  end
  @q.push [ :EOL, nil ]
  mol = Chem::SmilesMol.new
  construct(mol, do_parse)
  mol
end


..end linucs.ry modeval..idcf977ebdbe

##### racc 1.4.4 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 0, 5, :_reduce_none,
 3, 5, :_reduce_none,
 1, 6, :_reduce_none,
 2, 6, :_reduce_none ]

racc_reduce_n = 5

racc_shift_n = 8

racc_action_table = [
     2,     6,     7,     3,     5 ]

racc_action_check = [
     1,     4,     4,     1,     2 ]

racc_action_pointer = [
   nil,     0,     4,   nil,    -1,   nil,   nil,   nil ]

racc_action_default = [
    -1,    -5,    -5,    -3,    -5,     8,    -2,    -4 ]

racc_goto_table = [
     1,     4 ]

racc_goto_check = [
     1,     2 ]

racc_goto_pointer = [
   nil,     0,     0 ]

racc_goto_default = [
   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :EOL => 2,
 :node => 3 }

racc_use_result_var = true

racc_nt_base = 4

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'EOL',
'node',
'$start',
'linucs',
'linuc']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

 # reduce 2 omitted

 # reduce 3 omitted

 # reduce 4 omitted

 def _reduce_none( val, _values, result )
  result
 end

end   # class LinucsParser
